{"version":3,"sources":["Component/CreateMap/CreateMap.jsx","View/ShowMap/ShowMap.jsx","View/Search/Search.jsx","View/Home/Home.jsx","App.js","serviceWorker.js","index.js","images/search.svg"],"names":["Map","Mapir","setToken","transformRequest","url","headers","CreateMap","lngLatProps","useState","lngLat","setLngLat","address","setAddress","useEffect","axios","get","then","res","data","console","log","center","zoom","onClick","e","lng","lat","Layer","type","layout","length","Popup","coordinates","offset","Marker","anchor","ShowMap","Container","fluid","className","Search","search","setSearch","responseSearch","setResponseSearch","setPending","modal","setModal","modalItem","setModalItem","toggle","method","JSON","stringify","response","value","catch","error","FormGroup","Input","name","onChange","event","target","id","placeholder","src","searchIcon","alt","map","item","index","key","handleModal","title","obj","hasOwnProperty","isEmpty","Modal","isOpen","size","ModalBody","Row","Col","xs","lg","province","county","geom","Home","to","Button","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.93dd827d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Mapir from 'mapir-react-component';\r\nimport axios from 'axios';\r\n\r\nconst Map = Mapir.setToken({\r\n    transformRequest: (url) => {\r\n        return {\r\n            url: url,\r\n            headers: {\r\n                'x-api-key': 'your-api-key', //Mapir api key\r\n                'Mapir-SDK': 'reactjs'\r\n            },\r\n        }\r\n    }\r\n});\r\nfunction CreateMap({ lngLatProps }) {\r\n    const [lngLat, setLngLat] = useState(lngLatProps)\r\n    const [address, setAddress] = useState({})\r\n    const handleClick = (Map, e) => {\r\n        setLngLat([e.lngLat.lng, e.lngLat.lat])\r\n        console.log(e.lngLat);\r\n    }\r\n    useEffect(() => {\r\n        axios.get(`https://map.ir/reverse/fast-reverse?lat=${lngLat[1]}&lon=${lngLat[0]}`, {\r\n            headers: { \"x-api-key\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImI2ZmJkNTk2ODZiOWM1NzI0OWYyMTQ2NTJiOWVhMmExNTNlMGNjNjVmYjMwOWQxNGM0ZjhhM2U5OWU1MjQ5OTUwMzllMmIyY2UzOTIwNTU2In0.eyJhdWQiOiIxMTIxOCIsImp0aSI6ImI2ZmJkNTk2ODZiOWM1NzI0OWYyMTQ2NTJiOWVhMmExNTNlMGNjNjVmYjMwOWQxNGM0ZjhhM2U5OWU1MjQ5OTUwMzllMmIyY2UzOTIwNTU2IiwiaWF0IjoxNjAyODU1MjgxLCJuYmYiOjE2MDI4NTUyODEsImV4cCI6MTYwNTM2MDg4MSwic3ViIjoiIiwic2NvcGVzIjpbImJhc2ljIl19.Wuhxcn9AD01LhCKBCjzzDOWfP4HUVPsY951dywe6wJJTYcpTBPLKdZX62S7nKD3ZX72pqxn0IAL3GR20v1NtZGIN8smTHACWT7cytHQrmXdSPim8he1K2AFqbjPp993K8o0WUO9CxT79dWToAe24MlYhfTiH3EM-2krwgdULu2BXtMWr9GLcXCckPfqe4o-tU9mjtU812bsBEK4DRgvTRhn0p5QMaZqNJpoBwzx5O07_RvYm5X1Xxt-ollC78wrkzUKFxmi-q2sEcrkQWFeB9oMJwedABT0de6XWtjoXZgdbUoYST8FtRpPZo1vPa_l7Pf9jHQFyEUxFF9wDUP8iag\" }\r\n        }).then(res => {\r\n            setAddress(res.data)\r\n            console.log(\"axios :\", res.data)\r\n        })\r\n    }, [lngLat])\r\n    return (\r\n        <Mapir\r\n            center={[51.420470, 35.729054]}\r\n            Map={Map}\r\n            zoom={[10]}\r\n            onClick={handleClick}\r\n        >\r\n            <Mapir.Layer\r\n                type=\"symbol\"\r\n                layout={{ \"icon-image\": \"harbor-15\" }}\r\n\r\n            >\r\n            </Mapir.Layer>\r\n            {\r\n                lngLat.length !== 0 &&\r\n                <Mapir.Popup\r\n                    coordinates={lngLat}\r\n                    offset={{\r\n                        'bottom-left': [12, -38], 'bottom': [0, -38], 'bottom-right': [-12, -38]\r\n                    }}>\r\n                    <p>\r\n                        {\r\n                            address.address\r\n                        }\r\n                    </p>\r\n                </Mapir.Popup>\r\n            }\r\n            {\r\n                lngLat.length !== 0 &&\r\n                <Mapir.Marker\r\n                    coordinates={lngLat}\r\n                    anchor=\"bottom\">\r\n                </Mapir.Marker>\r\n            }\r\n        </Mapir>\r\n    )\r\n}\r\n\r\nexport default CreateMap\r\n\r\n","import React from 'react'\r\nimport { Container } from 'reactstrap'\r\nimport CreateMap from '../../Component/CreateMap/CreateMap'\r\n\r\nfunction ShowMap() {\r\n    return (\r\n        <Container fluid className=\"handle-w-h\">\r\n            <CreateMap lngLatProps={[]} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShowMap\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, FormGroup, Label, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap'\r\nimport axios from 'axios';\r\n\r\nimport CreateMap from '../../Component/CreateMap/CreateMap'\r\nimport './Search.css'\r\nimport searchIcon from '../../images/search.svg'\r\n\r\nfunction isEmpty(obj) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction Search() {\r\n    const [search, setSearch] = useState(\"\")\r\n    const [responseSearch, setResponseSearch] = useState([])\r\n    const [pending, setPending] = useState(true)\r\n    const [modal, setModal] = useState(false);\r\n    const [modalItem, setModalItem] = useState({})\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'POST',\r\n            url: \"https://map.ir/search/v2\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-api-key': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImI2ZmJkNTk2ODZiOWM1NzI0OWYyMTQ2NTJiOWVhMmExNTNlMGNjNjVmYjMwOWQxNGM0ZjhhM2U5OWU1MjQ5OTUwMzllMmIyY2UzOTIwNTU2In0.eyJhdWQiOiIxMTIxOCIsImp0aSI6ImI2ZmJkNTk2ODZiOWM1NzI0OWYyMTQ2NTJiOWVhMmExNTNlMGNjNjVmYjMwOWQxNGM0ZjhhM2U5OWU1MjQ5OTUwMzllMmIyY2UzOTIwNTU2IiwiaWF0IjoxNjAyODU1MjgxLCJuYmYiOjE2MDI4NTUyODEsImV4cCI6MTYwNTM2MDg4MSwic3ViIjoiIiwic2NvcGVzIjpbImJhc2ljIl19.Wuhxcn9AD01LhCKBCjzzDOWfP4HUVPsY951dywe6wJJTYcpTBPLKdZX62S7nKD3ZX72pqxn0IAL3GR20v1NtZGIN8smTHACWT7cytHQrmXdSPim8he1K2AFqbjPp993K8o0WUO9CxT79dWToAe24MlYhfTiH3EM-2krwgdULu2BXtMWr9GLcXCckPfqe4o-tU9mjtU812bsBEK4DRgvTRhn0p5QMaZqNJpoBwzx5O07_RvYm5X1Xxt-ollC78wrkzUKFxmi-q2sEcrkQWFeB9oMJwedABT0de6XWtjoXZgdbUoYST8FtRpPZo1vPa_l7Pf9jHQFyEUxFF9wDUP8iag',\r\n            },\r\n            data: JSON.stringify({ \"text\": search })\r\n        })\r\n            .then((response) => {\r\n                setResponseSearch(response.data.value)\r\n                setPending(false)\r\n            }).catch(error => {\r\n                setResponseSearch([])\r\n                console.log(error)\r\n            })\r\n    }, [search])\r\n    const handleChange = (event) => {\r\n        setSearch(event.target.value)\r\n    }\r\n    const handleModal = (item) => {\r\n        toggle();\r\n        setModalItem(item)\r\n    }\r\n    return (\r\n        <Container fluid className=\"p-0 bg-search\">\r\n            <div className=\"with-search mx-auto\">\r\n                <FormGroup className=\"pt-5\">\r\n                    <Input\r\n                        className=\"mx-auto input-search\"\r\n                        type=\"search\"\r\n                        name=\"search\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                        id=\"search\"\r\n                        placeholder=\"لطفا نشانی محل مورد نظر را جستجو نمایید\"\r\n                    />\r\n                    <img src={searchIcon} alt=\"\" className={search === \"\" ? \"icon-search\" : \"d-none\"} />\r\n                </FormGroup>\r\n                <div className=\"py-3\">\r\n                    {\r\n                        responseSearch.length !== 0 &&\r\n                        responseSearch.map((item, index) =>\r\n                            <div key={index} className=\"mx-auto text-right px-3 py-2 box-response-search\" onClick={() => handleModal(item)}>\r\n                                <h4 className=\"title-response-search\">\r\n                                    {item.title}\r\n                                </h4>\r\n                                <p className=\"address-response-search\">\r\n                                    {item.address}\r\n                                </p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            {\r\n                !isEmpty(modalItem) &&\r\n                <Modal isOpen={modal} size=\"xl\" toggle={toggle} className=\"mx-auto my-auto d-flex align-items-center h-100\">\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col xs=\"12\" lg=\"6\" className=\"modal-content-search\">\r\n                                <h4 className=\"title-response-search\">محل جستجو شده : {modalItem.title}</h4>\r\n                                <p className=\"my-4\">استان : {modalItem.province}</p>\r\n                                <p className=\"my-4\">شهرستان : {modalItem.county}</p>\r\n                                <p className=\"my-4\">آدرس محل : {modalItem.address}</p>\r\n                            </Col>\r\n                            <Col xs=\"12\" lg=\"6\">\r\n                                <CreateMap lngLatProps={modalItem.geom.coordinates} />\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Search\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Row, Col, Button } from 'reactstrap'\r\n\r\nimport './Home.css'\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container fluid className=\"p-0 m-0 bg-home\">\r\n            <Container className=\"mx-auto\">\r\n                <Row className=\"box-button-home\">\r\n                    <Col xs={12} lg={6} className=\"py-3\">\r\n                        <Link to=\"/map\" className=\"d-flex justify-content-center \"><Button className=\"button-home\">\r\n                            نمایش نقشه\r\n                        </Button></Link>\r\n                    </Col>\r\n                    <Col xs={12} lg={6} className=\"py-3\">\r\n                        <Link to=\"/search\" className=\"d-flex justify-content-center \"><Button className=\"button-home\">\r\n                            جستجوی نشانی\r\n                        </Button></Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div className=\"box-text-home py-4 px-5\">\r\n                    <h3 className=\"text-center\">سلام</h3>\r\n                    <p className=\"text-center mt-4\">امیدوارم از دیدن این تسک تمرینی لذت ببرید</p>\r\n                </div>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport ShowMap from './View/ShowMap/ShowMap'\nimport Search from './View/Search/Search'\nimport Home from './View/Home/Home'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/map\">\n          <ShowMap />\n        </Route>\n        <Route exact path=\"/search\">\n          <Search />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/search.5d5bf92e.svg\";"],"sourceRoot":""}